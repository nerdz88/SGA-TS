@startuml creerNouveauCours
skinparam style strictuml
skinparam defaultfontname Verdana
title RDCU. ajouterEspaceCours
participant ":GestionnaireCours" as controlleur
participant ":Université" as sga
participant "c:EspaceCours" as cours
participant ":SGBService" as service
participant ":Sgb" as sgb

-> controlleur : information = ajouterEspaceCours(token, idEspaceCours)
note right : Selon Contôleur,\ngarde même pour\ntoutes opérations systèmes
  controlleur->sga : ajouterEspaceCours(token, idEspaceCours)
  note left : Selon expert, universite doit stocker\ntoutes les EspaceCours pour qu'elle puisse\ndevenir expert pour les prochains appels
  sga ->  service : etudiants = recupererEtudiants(token, idEspaceCours)
  note left : Selon indirection, évite le couplage\nentre universite et le SGB. Tous\nles appels vers SGB sont fait\npar SGBService
  service -> sgb : etudiants = fetch(token, idEspaceCours)
  note left : Selon expert, l'information Sgb est l'expert,\ncar il contient toutes les informations\nutiles pour les espaces cours
  sga-->cours** : create()
  note left : Selon créateur, Université\nagrège plusieurs EspaceCours
  sga -> cours : ajouterEtudiants(etudiants)
  note right : Selon expert, EspaceCours doit stocker\ntous les étudiants pour qu'il puisse\ndevenir expert pour les prochains appels
  controlleur -> sga : information = recupererEspaceCours(tokenEnseignant)
  note left : Selon expert, Université a toute\nles informations requises\npour récupérer un cours
  @enduml
